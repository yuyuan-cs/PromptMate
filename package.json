{
  "name": "promptmate",
  "private": true,
  "version": "1.1.6",
  "type": "commonjs",
  "main": "dist-electron/main/main.cjs",
  "buildDate": "2025-09-03T10:32:00.878Z",
  "author": {
    "name": "泺源",
    "email": "yuyuan3162021@163.com"
  },
  "description": "PromptMate is a desktop application that allows you to create and manage your prompts.",
  "homepage": "https://github.com/yy0691/PromptMate",
  "repository": {
    "type": "git",
    "url": "https://github.com/yy0691/PromptMate.git"
  },
  "keywords": [
    "prompt",
    "ai",
    "desktop",
    "electron",
    "react",
    "typescript"
  ],
  "license": "MIT",
  "scripts": {
    "dev": "vite",
    "build": "npm run build:info && vite build && npm run build:electron",
    "build:info": "node scripts/build-info.js",
    "build:electron": "node -e \"const fs=require('fs');const path=require('path');const srcDir='src/main';const destDir='dist-electron/main';if(!fs.existsSync(destDir))fs.mkdirSync(destDir,{recursive:true});fs.readdirSync(srcDir).forEach(file=>{if(file.endsWith('.cjs'))fs.copyFileSync(path.join(srcDir,file),path.join(destDir,file));});\"",
    "build:dev": "vite build --mode development",
    "lint": "eslint .",
    "preview": "vite preview",
    "package": "electron-packager . PromptMate --platform=win32 --arch=x64 --icon=./public/fav_512x512.ico",
    "pack": "electron-builder --dir",
    "dist": "npm run build && electron-builder",
    "dist:win": "npm run build && electron-builder --win --x64 --config.electronDownload.mirror=https://npmmirror.com/mirrors/electron/",
    "dist:mac-intel": "npm run build && electron-builder --mac --x64 --config.electronDownload.mirror=https://npmmirror.com/mirrors/electron/",
    "dist:mac-arm": "npm run build && electron-builder --mac --arm64 --config.electronDownload.mirror=https://npmmirror.com/mirrors/electron/",
    "dist:mac": "npm run build && electron-builder --mac --universal --config.electronDownload.mirror=https://npmmirror.com/mirrors/electron/",
    "dist:all": "npm run build && electron-builder --win --x64 --config.electronDownload.mirror=https://npmmirror.com/mirrors/electron/ && electron-builder --mac --universal --config.electronDownload.mirror=https://npmmirror.com/mirrors/electron/",
    "electron:dev": "concurrently \"vite\" \"wait-on http://localhost:5173 http://localhost:5174 http://localhost:5175 && electron .\"",
    "electron:build": "vite build && npm run build:electron && electron-builder",
    "electron:preview": "vite build && npm run build:electron && electron .",
    "electron:start": "set NODE_ENV=development && electron .",
    "version:patch": "node scripts/version-manager.js patch",
    "version:minor": "node scripts/version-manager.js minor",
    "version:major": "node scripts/version-manager.js major",
    "release:patch": "npm run version:patch && npm run dist",
    "release:minor": "npm run version:minor && npm run dist",
    "release:major": "npm run version:major && npm run dist",
    "release:win": "npm run version:patch && npm run dist:win",
    "release:mac": "npm run version:patch && npm run dist:mac",
    "release:all": "npm run version:patch && npm run dist:all",
    "publish:patch": "node scripts/release-manager.js patch",
    "publish:minor": "node scripts/release-manager.js minor",
    "publish:major": "node scripts/release-manager.js major",
    "publish:win": "node scripts/release-manager.js patch win",
    "publish:mac": "node scripts/release-manager.js patch mac",
    "publish:all": "node scripts/release-manager.js patch all",
    "quick:patch": "node scripts/quick-release.js patch",
    "quick:minor": "node scripts/quick-release.js minor",
    "quick:major": "node scripts/quick-release.js major",
    "quick:win": "node scripts/quick-release.js patch win",
    "quick:mac": "node scripts/quick-release.js patch mac",
    "quick:all": "node scripts/quick-release.js patch all",
    "simple:patch": "node scripts/simple-release.js patch",
    "simple:minor": "node scripts/simple-release.js minor",
    "simple:major": "node scripts/simple-release.js major",
    "test:build": "node scripts/test-build.js"
  },
  "dependencies": {
    "@radix-ui/react-accordion": "^1.2.0",
    "@radix-ui/react-alert-dialog": "^1.1.1",
    "@radix-ui/react-aspect-ratio": "^1.1.0",
    "@radix-ui/react-avatar": "^1.1.0",
    "@radix-ui/react-checkbox": "^1.1.1",
    "@radix-ui/react-collapsible": "^1.1.0",
    "@radix-ui/react-context-menu": "^2.2.1",
    "@radix-ui/react-dialog": "^1.1.2",
    "@radix-ui/react-dropdown-menu": "^2.1.1",
    "@radix-ui/react-hover-card": "^1.1.1",
    "@radix-ui/react-label": "^2.1.0",
    "@radix-ui/react-menubar": "^1.1.1",
    "@radix-ui/react-navigation-menu": "^1.2.0",
    "@radix-ui/react-popover": "^1.1.1",
    "@radix-ui/react-progress": "^1.1.0",
    "@radix-ui/react-radio-group": "^1.2.0",
    "@radix-ui/react-scroll-area": "^1.1.0",
    "@radix-ui/react-select": "^2.1.1",
    "@radix-ui/react-separator": "^1.1.0",
    "@radix-ui/react-slider": "^1.2.0",
    "@radix-ui/react-slot": "^1.1.0",
    "@radix-ui/react-switch": "^1.1.0",
    "@radix-ui/react-tabs": "^1.1.0",
    "@radix-ui/react-toast": "^1.2.1",
    "@radix-ui/react-toggle": "^1.1.0",
    "@radix-ui/react-toggle-group": "^1.1.0",
    "@radix-ui/react-tooltip": "^1.1.4",
    "@reactflow/background": "^11.3.14",
    "@reactflow/controls": "^11.2.14",
    "@reactflow/core": "^11.11.4",
    "@reactflow/minimap": "^11.7.14",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.0.0",
    "date-fns": "^3.6.0",
    "electron-log": "^5.4.0",
    "electron-updater": "^6.6.2",
    "embla-carousel-react": "^8.3.0",
    "github-markdown-css": "^5.8.1",
    "i18next": "^25.4.0",
    "i18next-browser-languagedetector": "^8.2.0",
    "input-otp": "^1.2.4",
    "lucide-react": "^0.462.0",
    "next-themes": "^0.3.0",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.53.0",
    "react-i18next": "^15.7.1",
    "react-markdown": "^10.1.0",
    "react-resizable-panels": "^2.1.3",
    "react-router-dom": "^6.26.2",
    "react-window": "^1.8.11",
    "reactflow": "^11.11.4",
    "recharts": "^2.12.7",
    "rehype-raw": "^7.0.0",
    "remark-gfm": "^4.0.1",
    "sonner": "^1.5.0",
    "tailwind-merge": "^2.5.2",
    "tailwindcss-animate": "^1.0.7",
    "vaul": "^0.9.3"
  },
  "devDependencies": {
    "@eslint/js": "^9.9.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^22.14.0",
    "@types/react": "^18.3.20",
    "@types/react-dom": "^18.3.6",
    "@types/react-window": "^1.8.8",
    "@vitejs/plugin-react-swc": "^3.5.0",
    "autoprefixer": "^10.4.20",
    "concurrently": "^8.2.2",
    "electron": "^30.5.1",
    "electron-builder": "^24.13.3",
    "electron-packager": "^17.1.2",
    "eslint": "^9.9.0",
    "eslint-plugin-react-hooks": "^5.1.0-rc.0",
    "eslint-plugin-react-refresh": "^0.4.9",
    "globals": "^15.9.0",
    "postcss": "^8.4.47",
    "tailwindcss": "^3.4.11",
    "terser": "^5.39.2",
    "typescript": "^5.5.3",
    "typescript-eslint": "^8.0.1",
    "vite": "^5.4.1",
    "vite-plugin-electron": "^0.28.0",
    "wait-on": "^8.0.3"
  },
  "build": {
    "asar": true,
    "asarUnpack": "**/*.{node,dll}",
    "npmRebuild": false,
    "appId": "com.promptmate.app",
    "icon": "./public/favicon.png",
    "productName": "PromptMate",
    "electronDownload": {
      "mirror": "https://npmmirror.com/mirrors/electron/"
    },
    "directories": {
      "output": "release"
    },
    "publish": {
      "provider": "github",
      "owner": "yy0691",
      "repo": "PromptMate",
      "private": false
    },
    "files": [
      "dist/**/*",
      "dist-electron/**/*"
    ],
    "forceCodeSigning": false,
    "cscLink": null,
    "cscKeyPassword": null,
    "mac": {
      "icon": "./public/favicon.icns",
      "category": "public.app-category.productivity",
      "target": [
        {
          "target": "dmg",
          "arch": [
            "x64",
            "arm64",
            "universal"
          ]
        },
        {
          "target": "zip",
          "arch": [
            "x64",
            "arm64",
            "universal"
          ]
        }
      ],
      "artifactName": "${productName}-${version}-${arch}.${ext}",
      "sign": false
    },
    "win": {
      "icon": "./public/favicon.ico",
      "target": [
        {
          "target": "portable",
          "arch": [
            "x64"
          ]
        }
      ],
      "artifactName": "${productName}-${version}-${arch}.${ext}"
    },
    "linux": {
      "target": [
        "AppImage",
        "deb"
      ],
      "category": "Utility"
    }
  }
}
